package Test;

import Manager.InMemoryTaskManager;
import Moduls.Epic;
import Moduls.SubTask;
import Moduls.Task;
import Moduls.TaskStatus;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class InMemoryTaskManagerTest {
    private InMemoryTaskManager taskManagers;
    @BeforeEach
    void setUp() {
        taskManagers = new InMemoryTaskManager();
    }
    @Test
    void shouldAddAndRetrieveTaskById() {
        Task task = new Task("Task", "Task description", TaskStatus.NEW);
        taskManagers.addTask(task);
        Task retrievedTask = taskManagers.getTaskById(task.getId());
        assertNotNull(retrievedTask, "The task should be retrieved by ID");
        assertTrue(retrievedTask.equals(task), "The retrieved task should match the added task");
    }

    @Test
    void shouldAddAndRetrieveSubTaskById() {
        Epic epic = new Epic("Epic", "Epic description");
        taskManagers.addEpic(epic);
        SubTask subTask = new SubTask("SubTask", "SubTask description", TaskStatus.NEW, epic.getId());
        taskManagers.addSubTask(subTask);
        SubTask retrievedSubTask = (SubTask) taskManagers.getSubTaskById(subTask.getId());
        assertNotNull(retrievedSubTask, "The subTask should be retrieved by ID");
        assertTrue(retrievedSubTask.equals(subTask), "The retrieved subTask should match the added subTask");
    }

    @Test
    void shouldAddAndRetrieveEpicById() {
        Epic epic = new Epic("Epic", "Epic description");
        taskManagers.addEpic(epic);
        Epic retrievedEpic = (Epic) taskManagers.getEpicById(epic.getId());
        assertNotNull(retrievedEpic, "The epic should be retrieved by ID");
        assertTrue(retrievedEpic.equals(epic), "The retrieved epic should match the added epic");
    }
    @Test
    void tasksWithManualAndGeneratedIdsDoNotConflict() {
        Task autoIdTask = new Task("Auto ID Task", "Task description", TaskStatus.NEW);
        taskManagers.addTask(autoIdTask);
        int autoGeneratedId = autoIdTask.getId();

        int manualId = autoGeneratedId + 1;
        Task manualIdTask = new Task("Manual ID Task", "Task description", TaskStatus.NEW);
        manualIdTask.setId(manualId);
        taskManagers.addTask(manualIdTask);

        Task retrievedAutoIdTask = taskManagers.getTaskById(autoGeneratedId);
        Task retrievedManualIdTask = taskManagers.getTaskById(manualId);

        assertNotNull(retrievedAutoIdTask, "Task with auto-generated ID should exist.");
        assertNotNull(retrievedManualIdTask, "Task with manually set ID should exist.");
        assertNotEquals(retrievedAutoIdTask.getId(), retrievedManualIdTask.getId(), "Tasks should have unique IDs.");
    }
    @Test
    void addedTaskShouldRemainUnchanged() {
        Task originalTask = new Task("Original Task", "Task Description", TaskStatus.NEW);
        taskManagers.addTask(originalTask);
        int taskId = originalTask.getId();

        Task retrievedTask = taskManagers.getTaskById(taskId);

        assertEquals(originalTask.getId(), retrievedTask.getId(), "ID should match");
        assertEquals(originalTask.getTitle(), retrievedTask.getTitle(), "Title should match");
        assertEquals(originalTask.getDescription(), retrievedTask.getDescription(), "Description should match");
        assertEquals(originalTask.getStatus(), retrievedTask.getStatus(), "Status should match");
    }

}